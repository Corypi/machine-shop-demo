/*==========================================================
  Design Tokens
==========================================================*/
:root{
  /* Colors */
  --ColorBackground: #0b0d10;
  --ColorForeground: #e9edf1;
  --ColorMuted:      #9aa6b2;
  --ColorCard:       #12161b;      /* kept for future use */
  --ColorAccent:     #48b0ff;

  /* Layout */
  --MaxWidth: 1100px;
  --Radius:   12px;
  --Gap:      12px;

  /* Drawer behavior */
  --DrawerCollapsedHeight:   2.75rem;  /* header height when collapsed */
  --DrawerExpandedMaxHeight: 500px;    /* non-animated fallback max */

  /* Animation & perf */
  --AnimationDurationMs: 220ms;
  --DrawerIntrinsicSize: 420px;        /* content-visibility size hint */

  /* Drawer color system (HSL base + per-drawer stepping) */
  --DrawerHueBase:   210;   /* base hue to harmonize with bg */
  --DrawerHueStep:     2;   /* hue shift per drawer (degrees) */
  --DrawerSatBase:    18%;  /* base saturation */
  --DrawerSatStep:     0%;  /* saturation change per drawer */
  --DrawerLightBase:   7%;  /* top drawer lightness */
  --DrawerLightStep:  3.5%; /* lightness increase per drawer */
}

/*==========================================================
  Base / Resets
==========================================================*/
*{ box-sizing: border-box; }
html, body{ height: 100%; }
html, body{ overflow-x: hidden; }     /* prevent 100vw scrollbars */

body{
  margin: 0;
  color: var(--ColorForeground);
  background: var(--ColorBackground);
  font: 16px/1.5 system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
}

/*==========================================================
  Header
==========================================================*/
.Header{
  background: #1a2027;
  color: #ffffff;
  padding: 1rem;
  text-align: center;
  border-bottom: 1px solid #0e141a;
}
.HeaderTitle{
  margin: 0;
  font-size: clamp(1.5rem, 3.2vw, 2.4rem);
}
.HeaderSubtitle{
  margin: 0.25rem 0 0;
  color: #cfd8e3;
}

/*==========================================================
  Container (centered content; full-bleed drawers escape)
==========================================================*/
.Container{
  max-width: var(--MaxWidth);
  margin: 2rem auto;
  padding: 0 1rem;
}
.SectionTitle{
  margin: 0 0 0.75rem 0;
  font-size: 1.25rem;
  color: var(--ColorMuted);
}

/*==========================================================
  Drawers (full-width containers)
  - Title bar is visible (square top, rounded bottom)
  - Each title bar lightens & hue-shifts progressively
==========================================================*/

/* Drawer block spans viewport (escapes centered container) */
.Drawer{
  width: 100vw;
  margin-left: 50%;
  transform: translateX(-50%);
  max-width: none;

  /* per-drawer step variable (used by the title bar) */
  --_step: 0;

  contain: paint; /* perf */
}

/* Stack tightly — next bar becomes the hard divider line */
.Drawer + .Drawer{ margin-top: 0; }

/* Progressive lighten + hue shift by order */
.Container > [data-drawer]:nth-of-type(1){ --_step: 0; }
.Container > [data-drawer]:nth-of-type(2){ --_step: 1; }
.Container > [data-drawer]:nth-of-type(3){ --_step: 2; }
.Container > [data-drawer]:nth-of-type(4){ --_step: 3; }
.Container > [data-drawer]:nth-of-type(5){ --_step: 4; }
/* add more lines as you add more drawers */

/* ---------- Title Bar (always visible) ---------- */
.DrawerTitle{
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.75rem;
  padding: 0.875rem 1.125rem;
  margin: 0;
  min-height: var(--DrawerCollapsedHeight);
  cursor: pointer;
  user-select: none;
  color: #fff;

  /* per-drawer HSL gradient based on step */
  --_h:  calc(var(--DrawerHueBase)   + var(--DrawerHueStep)   * var(--_step));
  --_s:  calc(var(--DrawerSatBase)   + var(--DrawerSatStep)   * var(--_step));
  --_l0: calc(var(--DrawerLightBase) + var(--DrawerLightStep) * var(--_step));       /* top */
  --_l1: calc(var(--DrawerLightBase) + var(--DrawerLightStep) * var(--_step) + 2%);  /* bottom */

  background: linear-gradient(
    180deg,
    hsl(var(--_h), var(--_s), var(--_l0)) 0%,
    hsl(var(--_h), var(--_s), var(--_l1)) 100%
  );

  /* square top, rounded bottom */
  border-radius: 0 0 16px 16px;

  /* seam at top edge so stacked bars have a crisp line */
  border-top: 1px solid rgba(255,255,255,0.06);

  outline: none; /* rely on focus-visible */
}
.DrawerTitle:focus-visible{
  outline: 2px solid var(--ColorAccent);
  outline-offset: 4px;
}

/* caret (if you render one) */
.Caret{
  width: 1.25rem;
  height: 1.25rem;
  transition: transform var(--AnimationDurationMs) ease;
}
.Drawer--Open .Caret{ transform: rotate(180deg); }

/* ---------- Drawer Content (unrounded) ---------- */
.DrawerContent{
  padding: 0 1rem 24px 1rem;  /* gentle LR padding for text sections */
  display: grid;
  gap: 0.75rem;
  color: #cdd6df;

  /* fallback when JS is off */
  max-height: var(--DrawerExpandedMaxHeight);

  /* performance hints */
  content-visibility: auto;
  contain-intrinsic-size: var(--DrawerIntrinsicSize);
  overflow: clip;
}

/* Remove padding (perfect for full-bleed / fixed-height media) */
.DrawerContent--Flush,
.DrawerContent--Fill{
  padding: 0;
}

/*==========================================================
  Fixed-height Video (width may overflow; clipped)
==========================================================*/

/* Height presets on the drawer itself */
.Drawer--FixedHero  { height: 100svh; height: 100vh; }
.Drawer--FixedShort { height: 70svh;  height: 70vh;  }

/* Make the content area fill that fixed drawer height */
.Drawer--FixedHero  > .DrawerContent,
.Drawer--FixedShort > .DrawerContent{
  height: calc(100% - var(--DrawerCollapsedHeight));
}

/* Fill video inside the content area — no letterboxing */
.VideoFixed{
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;   /* crop sides to fill the frame */
  background: #000;
}

/* Suppress native controls UI completely */
.VideoFixed::-webkit-media-controls { display: none !important; }
.VideoFixed::-moz-media-controls { display: none !important; }
.VideoFixed::-ms-media-controls { display: none !important; }

/* Optional overlay Skip button that doesn't change layout height */
.SkipButton--Overlay{
  position: absolute;
  right: 12px;
  bottom: 12px;
  z-index: 2;
}

/* To allow overlay positioning within the content area */
.DrawerContent{ position: relative; }

/* Slightly shorter heroes on very small phones */
@media (max-width: 420px){
  .Drawer--FixedHero  { height: 92svh; height: 92vh; }
  .Drawer--FixedShort { height: 60svh; height: 60vh; }
}

/*==========================================================
  Skip Button base
==========================================================*/
.SkipRow{
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 0.5rem;
}
.SkipButton{
  position: relative;
  display: inline-block;
  margin-top: 0.5rem;
  margin-left: auto;
  padding: 0.5rem 0.9rem;
  font-weight: 700;
  border: 2px solid #ffffff;
  border-radius: 6px;
  color: #ffffff;
  background: rgba(0,0,0,0.55);
  cursor: pointer;
  transition: background 0.2s ease, transform 0.1s ease, box-shadow 0.1s ease;
}
.SkipButton:hover{  background: rgba(255,255,255,0.2); }
.SkipButton:active{
  background: rgba(255,255,255,0.35);
  transform: scale(0.96);
}
.SkipButton:focus{ outline: none; }
.SkipButton:focus-visible{
  outline: 2px solid var(--ColorAccent);
  outline-offset: 3px;
  box-shadow: 0 0 0 3px rgba(72,176,255,0.25);
}

/* ================================
   Overlay Skip button on videos
   ================================ */

/* Ensure the content area can anchor absolute children */
.DrawerContent--Fill {
  position: relative;
}

/* Skip button floats over the video, 30px in from bottom-right.
   Safe-area env() avoids clashing with iOS home indicator. */
.SkipButton--Overlay {
  position: absolute;
  z-index: 5;
  right: calc(30px + env(safe-area-inset-right));
  bottom: calc(30px + env(safe-area-inset-bottom));
  margin: 0;                 /* ignore flow margins */
  backdrop-filter: blur(4px);
}

/* Optional: slightly stronger hover/press feedback when over video */
.SkipButton--Overlay:hover  { background: rgba(255,255,255,0.26); }
.SkipButton--Overlay:active { background: rgba(255,255,255,0.38); transform: scale(0.97); }

/* Keep the video fill behavior consistent even when controls/end overlay show */
.VideoFixed {
  width: 100%;
  height: 100%;
  display: block;
  object-fit: cover;         /* always fill (crop as needed) */
  object-position: center;
  background: #000;
}

/* If the browser tries to reserve space for controls, this maintains layout.
   (Not all browsers need this, but it doesn't hurt.) */
.Drawer--FixedHero  > .DrawerContent,
.Drawer--FixedShort > .DrawerContent {
  height: calc(100% - var(--DrawerCollapsedHeight));
  min-height: 0;             /* prevent flex/grid min-content growth */
}

/*==========================================================
  Footer
==========================================================*/
.Footer{
  padding: 2rem 1rem;
  text-align: center;
  color: var(--ColorMuted);
  border-top: 1px solid #11161b;
}

/*==========================================================
  Reduced Motion
==========================================================*/
@media (prefers-reduced-motion: reduce){
  .Caret{ transition: none !important; }

  .DrawerContent,
  .SkipButton{
    transition: background 0.2s ease !important;
  }

  .SkipButton:active{
    transform: none !important;
  }
}