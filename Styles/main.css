/*==========================================================
  Design Tokens / Global Constants
==========================================================*/
:root{
  /* ---------------- Colors ---------------- */
  --GlobalColorBackgroundDefaultHexValue:       #0b0d10;
  --GlobalColorForegroundDefaultHexValue:       #e9edf1;
  --GlobalColorMutedTextHexValue:               #9aa6b2;
  --GlobalColorCardSurfaceHexValue:             #12161b;   /* reserved for future use */
  --GlobalColorAccentPrimaryHexValue:           #48b0ff;

  /* ---------------- Layout ---------------- */
  --GlobalMaximumContentWidthPixels:            1100px;
  --GlobalGenericBorderRadiusPixels:            12px;
  --GlobalGenericElementGapPixels:              12px;

  /* ---------------- Drawer Behavior ---------------- */
  --DrawerCollapsedHeaderBarHeightRems:         2.75rem;   /* header height when collapsed */
  --DrawerExpandedFallbackMaxHeightPixels:      500px;     /* max height if JS is off */

  /* ---------------- Animation & Performance ---------------- */
  --GlobalAnimationDurationMilliseconds:        220ms;
  --DrawerContentIntrinsicSizePixels:           420px;     /* size hint for content-visibility */

  /* ---------------- Drawer Color System (HSL base + stepping) ---------------- */
  --DrawerTitleBarBaseHueDegrees:               210;   /* harmonizes with background */
  --DrawerTitleBarHueStepPerDrawerDegrees:      2;
  --DrawerTitleBarBaseSaturationPercent:        18%;
  --DrawerTitleBarSaturationStepPerDrawerPct:   0%;
  --DrawerTitleBarBaseLightnessPercent:         7%;
  --DrawerTitleBarLightnessStepPerDrawerPct:    3.5%;

  /* ---------------- Drawer Structural Constants ---------------- */
  --DrawerBottomCornerBorderRadiusPixels:       16px;      /* rounded bottom for bars/panels */
  --DrawerExpandedPanelExtraTailPaddingPixels:  16px;      /* extra padding below open content */
  --DrawerHeaderTopSeamBorderColorRgba:         rgba(255,255,255,0.06);

  --DrawerHeaderTitlePaddingVerticalRems:       0.875rem;
  --DrawerHeaderTitlePaddingHorizontalRems:     1.125rem;

  --DrawerContentPaddingHorizontalRems:         1rem;
  --DrawerContentPaddingBottomRems:             1.5rem;    /* 24px */
  --DrawerContentInternalGapRems:               0.75rem;

  --DrawerStackedDrawerGapPixels:               0;         /* no visible gap between stacked bars */

  /* ---------------- Video Overlay / Skip Button ---------------- */
  --VideoOverlaySkipButtonInsetFromEdgePixels:  30px;
  --VideoOverlaySkipButtonBackdropBlurPixels:   4px;

  /* ---------------- Trigger Line Debug Visual ---------------- */
  --ViewportAnchorTriggerLineThicknessPixels:   2px;
  --ViewportAnchorTriggerLineColorHexValue:     #ffd400;

  /* Keep this in sync with JS config ViewportAnchorFraction (0.35 = 35vh) */
  --ViewportAnchorTriggerLinePositionVh:        35vh;
}

/*==========================================================
  Base / Resets
==========================================================*/
* { box-sizing: border-box; }
html, body { height: 100%; }
html, body { overflow-x: hidden; }     /* prevent 100vw scrollbars */

body {
  margin: 0;
  color: var(--GlobalColorForegroundDefaultHexValue);
  background: var(--GlobalColorBackgroundDefaultHexValue);
  font: 16px/1.5 system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
}

/* =========================================
   Drawer Trigger Line (visual scroll marker)
   ========================================= */
.TriggerLine {
  position: fixed;
  top: var(--ViewportAnchorTriggerLinePositionVh);
  left: 0;
  right: 0;
  height: var(--ViewportAnchorTriggerLineThicknessPixels);
  background: var(--ViewportAnchorTriggerLineColorHexValue);
  opacity: 0.7;
  z-index: 9999;
  pointer-events: none;
}

/*==========================================================
  Header
==========================================================*/
.Header {
  background: #1a2027;
  color: #ffffff;
  padding: 1rem;
  text-align: center;
  border-bottom: 1px solid #0e141a;
}
.HeaderTitle {
  margin: 0;
  font-size: clamp(1.5rem, 3.2vw, 2.4rem);
}
.HeaderSubtitle {
  margin: 0.25rem 0 0;
  color: #cfd8e3;
}

/*==========================================================
  Container (centered content; full-bleed drawers escape)
==========================================================*/
.Container {
  max-width: var(--GlobalMaximumContentWidthPixels);
  margin: 0 auto 2rem; /* no top margin; keep a little bottom breathing room */
  padding: 0 1rem;
}

/* Tailroom so the 35% anchor can hit the last marker */
.Container::after{
  content: "";
  display: block;
  height: 65dvh; /* 100% - 35% = 65% of dynamic viewport height */
}

.SectionTitle {
  margin: 0 0 0.75rem 0;
  font-size: 1.25rem;
  color: var(--GlobalColorMutedTextHexValue);
}

/*==========================================================
  Drawers
==========================================================*/
.Drawer {
  width: 100vw;
  margin-left: 50%;
  transform: translateX(-50%);
  max-width: none;
  --_step: 0;
  contain: paint; /* perf */
}

/* Stack tightly â€” next bar becomes the hard divider line */
.Drawer + .Drawer { margin-top: var(--DrawerStackedDrawerGapPixels); }

/* Progressive lighten + hue shift by order */
.Container > [data-drawer]:nth-of-type(1) { --_step: 0; }
.Container > [data-drawer]:nth-of-type(2) { --_step: 1; }
.Container > [data-drawer]:nth-of-type(3) { --_step: 2; }
.Container > [data-drawer]:nth-of-type(4) { --_step: 3; }
.Container > [data-drawer]:nth-of-type(5) { --_step: 4; }

/* ---------- Title Bar ---------- */
.DrawerTitle {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--DrawerContentInternalGapRems);
  padding: var(--DrawerHeaderTitlePaddingVerticalRems) var(--DrawerHeaderTitlePaddingHorizontalRems);
  margin: 0;
  min-height: var(--DrawerCollapsedHeaderBarHeightRems);
  cursor: pointer;
  user-select: none;
  color: #fff;

  --_h:  calc(var(--DrawerTitleBarBaseHueDegrees)   + var(--DrawerTitleBarHueStepPerDrawerDegrees) * var(--_step));
  --_s:  calc(var(--DrawerTitleBarBaseSaturationPercent)   + var(--DrawerTitleBarSaturationStepPerDrawerPct) * var(--_step));
  --_l0: calc(var(--DrawerTitleBarBaseLightnessPercent) + var(--DrawerTitleBarLightnessStepPerDrawerPct) * var(--_step));
  --_l1: calc(var(--DrawerTitleBarBaseLightnessPercent) + var(--DrawerTitleBarLightnessStepPerDrawerPct) * var(--_step) + 2%);

  background: linear-gradient(
    180deg,
    hsl(var(--_h), var(--_s), var(--_l0)) 0%,
    hsl(var(--_h), var(--_s), var(--_l1)) 100%
  );

  border-radius: 0 0 var(--DrawerBottomCornerBorderRadiusPixels) var(--DrawerBottomCornerBorderRadiusPixels);
  border-top: 1px solid var(--DrawerHeaderTopSeamBorderColorRgba);
  outline: none;
}
.DrawerTitle:focus-visible {
  outline: 2px solid var(--GlobalColorAccentPrimaryHexValue);
  outline-offset: 4px;
}

/* caret */
.Caret {
  width: 1.25rem;
  height: 1.25rem;
  transition: transform var(--GlobalAnimationDurationMilliseconds) ease;
}
.Drawer--Open .Caret { transform: rotate(180deg); }

/* ---------- Drawer Content ---------- */
.DrawerContent {
  height: 0;
  padding: 0;
  display: grid;
  gap: var(--DrawerContentInternalGapRems);
  color: #cdd6df;

  content-visibility: auto;
  contain-intrinsic-size: var(--DrawerContentIntrinsicSizePixels);
  will-change: height; /* smoother height anims */
}

/* Belt-and-suspenders overflow fallback */
@supports not (overflow: clip) { .DrawerContent { overflow: hidden; } }
@supports (overflow: clip)     { .DrawerContent { overflow: clip; } }

.Drawer--Open > .DrawerContent {
  padding: 0 var(--DrawerContentPaddingHorizontalRems) var(--DrawerContentPaddingBottomRems) var(--DrawerContentPaddingHorizontalRems);
}

/* Fill / Flush variants remove padding entirely */
.Drawer--Open > .DrawerContent.DrawerContent--Fill,
.Drawer--Open > .DrawerContent.DrawerContent--Flush {
  padding: 0;
}

/* When open, disable the intrinsic sizing hint so JS measures real height */
.Drawer--Open > .DrawerContent{
  content-visibility: visible;
  contain-intrinsic-size: auto;
}

/* ---------- Drawer open panel background + rounded base ---------- */
.Drawer--Open {
  --_h:  calc(var(--DrawerTitleBarBaseHueDegrees)   + var(--DrawerTitleBarHueStepPerDrawerDegrees) * var(--_step));
  --_s:  calc(var(--DrawerTitleBarBaseSaturationPercent)   + var(--DrawerTitleBarSaturationStepPerDrawerPct) * var(--_step));
  --_l0: calc(var(--DrawerTitleBarBaseLightnessPercent) + var(--DrawerTitleBarLightnessStepPerDrawerPct) * var(--_step));
  --_l1: calc(var(--DrawerTitleBarBaseLightnessPercent) + var(--DrawerTitleBarLightnessStepPerDrawerPct) * var(--_step) + 2%);

  background: linear-gradient(
    180deg,
    hsl(var(--_h), var(--_s), var(--_l0)) 0%,
    hsl(var(--_h), var(--_s), var(--_l1)) 100%
  );

  border-radius: 0 0 var(--DrawerBottomCornerBorderRadiusPixels) var(--DrawerBottomCornerBorderRadiusPixels);
  overflow: hidden;
  padding-bottom: var(--DrawerExpandedPanelExtraTailPaddingPixels);
}

.Drawer--Open > .DrawerTitle {
  background: transparent;
  border-top: 1px solid var(--DrawerHeaderTopSeamBorderColorRgba);
  border-radius: 0;
}

.Drawer:not(.Drawer--Open) > .DrawerTitle {
  --_h:  calc(var(--DrawerTitleBarBaseHueDegrees)   + var(--DrawerTitleBarHueStepPerDrawerDegrees) * var(--_step));
  --_s:  calc(var(--DrawerTitleBarBaseSaturationPercent)   + var(--DrawerTitleBarSaturationStepPerDrawerPct) * var(--_step));
  --_l0: calc(var(--DrawerTitleBarBaseLightnessPercent) + var(--DrawerTitleBarLightnessStepPerDrawerPct) * var(--_step));
  --_l1: calc(var(--DrawerTitleBarBaseLightnessPercent) + var(--DrawerTitleBarLightnessStepPerDrawerPct) * var(--_step) + 2%);
  background: linear-gradient(180deg, hsl(var(--_h), var(--_s), var(--_l0)) 0%, hsl(var(--_h), var(--_s), var(--_l1)) 100%);
  border-radius: 0 0 var(--DrawerBottomCornerBorderRadiusPixels) var(--DrawerBottomCornerBorderRadiusPixels);
}

/* ===== Tab Bar ===== */
.TabBar{
  position: fixed;
  top: 0; left: 0; right: 0;
  height: 56px;
  z-index: 9998;
  backdrop-filter: blur(6px);
  background: linear-gradient(180deg, rgba(13,16,20,0.72), rgba(13,16,20,0.45));
  border-bottom: 1px solid rgba(255,255,255,0.06);
  display: flex;
  align-items: center;
  padding: 0 10px;
}

.TabBarTrack{
  display: flex;
  align-items: center;
  gap: 8px;
  width: 100%;
  min-width: 0; /* allow flex children to shrink */
}

.Tab{
  flex: 0 0 auto; /* compact chips by default */
  max-width: 28%;
  padding: 8px 12px;
  border-radius: 10px;
  border: 1px solid rgba(255,255,255,0.12);
  color: #e9edf1;
  background: rgba(255,255,255,0.04);
  font: 600 14px/1 system-ui,-apple-system,Segoe UI,Roboto,sans-serif;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  cursor: pointer;
  transition: flex 220ms ease, background 160ms ease, border-color 160ms ease, opacity 160ms ease;
}

.Tab:hover{
  background: rgba(255,255,255,0.08);
  border-color: rgba(255,255,255,0.18);
}

.Tab--Active{
  flex: 1 1 auto;     /* <-- active tab expands to fill remaining width */
  max-width: none;
  background: rgba(72,176,255,0.16);
  border-color: rgba(72,176,255,0.35);
}

.Tab--Past{           /* tabs for sections you scrolled past */
  opacity: 0.85;
}


/*==========================================================
  Fixed-height Video (applies only while open)
==========================================================*/

/* Apply clamped video height only while the drawer is open */
.Drawer--Open.Drawer--FixedHero  > .DrawerContent{
  height: clamp(70dvh, calc(100vw * 9 / 16), 100dvh);
  min-height: 0;
}
.Drawer--Open.Drawer--FixedShort > .DrawerContent{
  height: clamp(48dvh, calc(100vw * 9 / 16), 70dvh);
}

/* === NEW: extend video drawers by one closed-header height === */
.Drawer--Open.Drawer--FixedHero,
.Drawer--Open.Drawer--FixedShort,
.Drawer--Open:has(> .DrawerContent.DrawerContent--Fill){
  padding-bottom: var(--DrawerCollapsedHeaderBarHeightRems);
}

/* Allow the video to truly fill the content height (avoid grid sizing quirks) */
.DrawerContent--Fill{
  display: block;        /* override grid for this variant */
  position: relative;    /* anchor absolute children (video/overlay) */
  overflow: hidden;      /* prevent bleed */
  padding: 0;
  min-height: 0;
}

/* Make the video fill the content box exactly */
.VideoFixed{
  position: absolute;
  inset: 0;              /* top:0; right:0; bottom:0; left:0 */
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  background: #000;
  z-index: 0;            /* keep overlay button above */
}

/*==========================================================
  Skip Button (base + overlay)
==========================================================*/
.SkipRow {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 0.5rem;
}
.SkipButton {
  position: relative;
  display: inline-block;
  margin-top: 0.5rem;
  margin-left: auto;
  padding: 0.5rem 0.9rem;
  font-weight: 700;
  border: 2px solid #ffffff;
  border-radius: 6px;
  color: #ffffff;
  background: rgba(0,0,0,0.55);
  cursor: pointer;
  transition: background 0.2s ease, transform 0.1s ease, box-shadow 0.1s ease;
}
.SkipButton:hover { background: rgba(255,255,255,0.2); }
.SkipButton:active { background: rgba(255,255,255,0.35); transform: scale(0.96); }
.SkipButton:focus { outline: none; }
.SkipButton:focus-visible {
  outline: 2px solid var(--GlobalColorAccentPrimaryHexValue);
  outline-offset: 3px;
  box-shadow: 0 0 0 3px rgba(72,176,255,0.25);
}

/* Overlay variant â€” single decisive rule (iOS safe-area aware) */
.SkipButton.SkipButton--Overlay{
  position: absolute;
  z-index: 5;
  right: max(var(--VideoOverlaySkipButtonInsetFromEdgePixels), env(safe-area-inset-right));
  bottom: max(var(--VideoOverlaySkipButtonInsetFromEdgePixels), env(safe-area-inset-bottom));
  margin: 0 !important;
  width: auto;
  height: auto;
  display: block;
  white-space: nowrap;
  -webkit-backdrop-filter: blur(var(--VideoOverlaySkipButtonBackdropBlurPixels));
  backdrop-filter: blur(var(--VideoOverlaySkipButtonBackdropBlurPixels));
}

/* Hide native controls ONLY for autoplay+muted (e.g., Intro hero) */
video[autoplay][muted]::-webkit-media-controls { display: none !important; }
video[autoplay][muted]::-moz-media-controls    { display: none !important; }
video[autoplay][muted]::-ms-media-controls     { display: none !important; }

/*==========================================================
  Footer
==========================================================*/
.Footer {
  padding: 2rem 1rem;
  text-align: center;
  color: var(--GlobalColorMutedTextHexValue);
  border-top: 1px solid #11161b;
}

/*==========================================================
  Reduced Motion
==========================================================*/
@media (prefers-reduced-motion: reduce) {
  .Caret { transition: none !important; }
  .DrawerContent,
  .SkipButton { transition: background 0.2s ease !important; }
  .SkipButton:active { transform: none !important; }
}

html {
  overflow-anchor: none; /* let JS control anchoring during drawer anims */
}

/* ===== DEBUG ONLY (optional; remove when happy) ===== */
[data-drawer-content].DrawerContent--Fill { outline: 2px solid #00e5ff; }   /* cyan = content box */
.VideoFixed                                { outline: 2px solid #ff3b30; }   /* red = actual video */
.SkipButton--Overlay                       { outline: 2px solid #ffd400; }   /* yellow = button */

:root { --dbg-size: ""; }
#DebugProbe {
  position: fixed;
  left: 8px; bottom: calc(8px + env(safe-area-inset-bottom));
  font: 12px/1.3 system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
  color: #fff; background: rgba(0,0,0,.6);
  padding: 6px 8px; border-radius: 6px; z-index: 99999; pointer-events: none;
  white-space: pre;
}